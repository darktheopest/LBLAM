/**
 ▄█        ▄██████▄     ▄████████   ▄▄▄▄███▄▄▄▄      ▄████████    ▄████████ 
███       ███    ███   ███    ███ ▄██▀▀▀███▀▀▀██▄   ███    ███   ███    ███ 
███       ███    ███   ███    ███ ███   ███   ███   ███    ███   ███    █▀  
███       ███    ███  ▄███▄▄▄▄██▀ ███   ███   ███   ███    ███   ███        
███       ███    ███ ▀▀███▀▀▀▀▀   ███   ███   ███ ▀███████████ ▀███████████ 
███       ███    ███ ▀███████████ ███   ███   ███   ███    ███          ███ 
███▌    ▄ ███    ███   ███    ███ ███   ███   ███   ███    ███    ▄█    ███ 
█████▄▄██  ▀██████▀    ███    ███  ▀█   ███   █▀    ███    █▀   ▄████████▀  
▀                      ███    ███                                           
 * Code generated by Lormas Bot Lab
 * All code in this folder belongs to Lormas Bot Lab
 * For any rights, contact support@lormas.net
*/

import { Events, Listener } from '@sapphire/framework';
import type EClient from '../../structures/EClient';
import updateEmojisList from '../../utils/updateEmojisList';
import { TextChannel } from 'discord.js';

export class Ready extends Listener {
	public constructor(context: Listener.LoaderContext, options: Listener.Options) {
		super(context, {
			...options,
			event: Events.ClientReady,
		});
	}
	public async run(client: EClient) {
		await updateEmojisList(this.container)
		setInterval(async() => await updateEmojisList(this.container), 5 * 60 * 1000)
		client.on(Events.GuildEmojiCreate, async() => await updateEmojisList(this.container))
		client.on(Events.GuildEmojiDelete, async() => await updateEmojisList(this.container))
		client.on(Events.GuildEmojiUpdate, async() => await updateEmojisList(this.container))
		return client.logger.info(`Successfully logged in as ${client.user?.username} [${client.user?.id}].`);
	}
}